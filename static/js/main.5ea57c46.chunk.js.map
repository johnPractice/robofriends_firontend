{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","props","id","email","name","className","src","alt","CardList","cardComponent","robots","map","user","key","SearchBox","onSearchChange","value","onChange","type","placeholder","Scroll","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","React","Component","App","console","log","e","target","toLowerCase","searchField","fetch","then","res","json","users","catch","filteredRobots","filter","robot","includes","length","seagreen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAagBA,G,MAZL,SAACC,GAAS,IACVC,EAAeD,EAAfC,GAAGC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,KAClB,OACG,yBAAKC,UAAU,4DACX,yBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,6BACI,4BAAKH,GACL,2BAAID,OCcFK,EAnBC,SAACP,GAAS,IAEhBQ,EADSR,EAARS,OACsBC,KAAI,SAAAC,GAC7B,OACI,kBAAC,EAAD,CACAT,MAAOS,EAAKT,MACZD,GAAIU,EAAKR,KACTA,KAAMQ,EAAKR,KACXS,IAAKD,EAAKV,QAIlB,OACI,6BACKO,ICDEK,EAdC,SAACb,GAAS,IACfc,EAAwBd,EAAxBc,eAAeC,EAASf,EAATe,MACtB,OACI,yBAAKX,UAAU,OACb,2BACIW,MAAOA,EACPC,SAAUF,EACVV,UAAU,yCACVa,KAAK,SACLC,YAAY,oBCAXC,EATA,SAACnB,GACZ,OACI,6BAEKA,EAAMoB,WCkBJC,E,kDArBX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAM,CACPC,UAAS,GAHE,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAL,2BAAkBD,KAAKJ,OAAvB,IAA6BC,UAAS,O,+BAItC,OAAGG,KAAKJ,MAAMC,SAER,qDAGCG,KAAK1B,MAAMoB,a,GAlBCQ,IAAMC,WC8DlBC,E,kDAxDX,WAAY9B,GAAQ,IAAD,6BACf+B,QAAQC,IAAI,mBACZ,cAAMhC,IASVc,eAAe,SAACmB,GACZ,IAAMlB,EAAQkB,EAAEC,OAAOnB,MAAMoB,cAE7B,EAAKR,SAAL,2BAAkB,EAAKL,OAAvB,IAA6Bc,YAAYrB,MAVzC,EAAKO,MAAM,CACPb,OAAO,GACP2B,YAAY,IAND,E,iEAkBfL,QAAQC,IAAI,6B,0CAGK,IAAD,OAChBD,QAAQC,IAAI,0BACZK,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEFV,QAAQC,IAAIS,GACZ,EAAKd,SAAL,2BAAkB,EAAKL,OAAvB,IAA6Bb,OAAOgC,QAEvCC,OAAM,SAAAT,GAAC,OAAEF,QAAQP,MAAMS,Q,+BAGtB,IAAD,OACLF,QAAQC,IAAI,aAGZ,IAAMW,EAAiBjB,KAAKJ,MAAMb,OAAOmC,QAAO,SAAAC,GAC5C,OAAOA,EAAM1C,KAAKgC,cAAcW,SAAS,EAAKxB,MAAMc,gBAExD,OAC6B,IAA7BV,KAAKJ,MAAMb,OAAOsC,OACd,0CAEA,yBAAK3C,UAAU,MACX,wBAAIA,UAAU,eAAd,gBACA,kBAAC,EAAD,CAAWU,eAAgBY,KAAKZ,eAAgBC,MAAOW,KAAKJ,MAAM0B,WAClE,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUvC,OAAQkC,W,GAlDxBf,IAAMC,WCDxBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5ea57c46.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Card=(props)=>{\r\n    const {id,email,name}=props;\r\n  return(\r\n     <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-1 pointer'>\r\n         <img src={`https://robohash.org/${id}?200x200`} alt='photos'/>\r\n         <div>\r\n             <h2>{name}</h2>\r\n             <p>{email}</p>\r\n         </div>\r\n     </div>\r\n  ) ;\r\n};\r\nexport  default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList =(props)=>{\r\n    const {robots}=props;\r\n    const cardComponent = robots.map(user=>{\r\n        return (\r\n            <Card\r\n            email={user.email}\r\n            id={user.name}\r\n            name={user.name}\r\n            key={user.id}\r\n            />\r\n            );\r\n    });\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox=(props)=>{\r\n    const {onSearchChange,value} = props\r\n    return(\r\n        <div className='pa2'>\r\n          <input\r\n              value={value}\r\n              onChange={onSearchChange}\r\n              className='pa3 ba b--green hover-bg-lightest-blue'\r\n              type='search'\r\n              placeholder='search robots'\r\n          />\r\n        </div>\r\n    );\r\n};\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props)=>{\r\n    return(\r\n        <div>\r\n        {/*<div style={{overflowY:'scroll',border:'1px solid black',height:'800px'}}>*/}\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            hasError:false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({...this.state,hasError:true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return(\r\n              <h1>OOPS tats not good :(</h1>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './App.css';\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\n//App class Component\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        console.log('in constructor');\r\n        super(props);\r\n        //define state for App Component\r\n        this.state={\r\n            robots:[],\r\n            searchField:''\r\n        }\r\n    }\r\n    //search field event declare\r\n    //after change to arrow function solve the this refer\r\n    onSearchChange=(e)=>{\r\n        const value = e.target.value.toLowerCase();\r\n\r\n        this.setState({...this.state,searchField:value});\r\n    };\r\n    //component will mount\r\n    componentWillMount() {\r\n        console.log('in component will mount');\r\n    }\r\n    //component did mount\r\n    componentDidMount() {\r\n        console.log('in component did mount');\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(res=>res.json())\r\n            .then(users=>\r\n            {\r\n                console.log(users);\r\n                this.setState({...this.state,robots:users});\r\n            })\r\n            .catch(e=>console.error(e));\r\n    }\r\n\r\n    render() {\r\n        console.log('in render');\r\n\r\n        //after changing the searchField re-render the DOM and page\r\n        const filteredRobots = this.state.robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(this.state.searchField);\r\n        });\r\n        return (\r\n        this.state.robots.length === 0?\r\n            <h1>Loading :)</h1>\r\n       :\r\n            <div className=\"tc\">\r\n                <h1 className='blue fw9-ns'>Robo Friends</h1>\r\n                <SearchBox onSearchChange={this.onSearchChange} value={this.state.seagreen}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}
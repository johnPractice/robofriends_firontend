{"version":3,"sources":["reducers.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","index.js"],"names":["initialStateSearch","searchField","initialState","isPending","robots","error","Card","props","id","email","name","className","src","alt","CardList","cardComponent","map","user","key","SearchBox","onSearchChange","value","onChange","type","placeholder","Scroll","children","ErrorBoundry","state","hasError","errorInfo","this","setState","React","Component","App","console","log","onRequestRobots","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","e","payload","target","fetch","then","res","json","data","catch","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25f25120.chunk.js","sourcesContent":["import {CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAIL, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_PENDING} from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: '',\r\n};\r\nconst initialState = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return {...state, searchField: action.payload};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const requestRobotsReducer = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return {...state, isPending: true};\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {...state, robots: action.payload, isPending: false};\r\n        case REQUEST_ROBOTS_FAIL:\r\n            return {...state, error: action.payload, isPending: false};\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const {id, email, name} = props;\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-1 pointer'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='photos'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = (props) => {\r\n    const {robots} = props;\r\n    const cardComponent = robots.map(user => {\r\n        return (\r\n            <Card\r\n                email={user.email}\r\n                id={user.name}\r\n                name={user.name}\r\n                key={user.id}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n    const {onSearchChange, value} = props;\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                value={value}\r\n                onChange={onSearchChange}\r\n                className='pa3 ba b--green hover-bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props)=>{\r\n    return(\r\n        <div>\r\n        {/*<div style={{overflowY:'scroll',border:'1px solid black',height:'800px'}}>*/}\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({...this.state, hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <h1>OOPS tats not good :(</h1>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './App.css';\r\nimport {requestRobots, setSearchField} from '../actions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\n\r\n//App class Component\r\nclass App extends React.Component {\r\n\r\n    //search field event declare\r\n    //after change to arrow function solve the this refer\r\n    // onSearchChange=(e)=>{\r\n    //     const value = e.target.value.toLowerCase();\r\n    //\r\n    //     this.setState({...this.state,searchField:value});\r\n    // };\r\n    //component will mount\r\n    componentWillMount() {\r\n        console.log('in component will mount');\r\n    }\r\n\r\n    //component did mount\r\n    componentDidMount() {\r\n        // console.log('in component did mount');\r\n        // fetch('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(res=>res.json())\r\n        //     .then(users=>\r\n        //     {\r\n        //         console.log(users);\r\n        //         this.setState({...this.state,robots:users});\r\n        //     })\r\n        //     .catch(e=>console.error(e));\r\n        this.props.onRequestRobots()\r\n    }\r\n\r\n    render() {\r\n        console.log('in render');\r\n        const {searchField, onSearchChange, robots, isPending} = this.props;\r\n        //after changing the searchField re-render the DOM and page\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return (\r\n            isPending ?\r\n                <h1>Loading :)</h1>\r\n                :\r\n                <div className=\"tc\">\r\n                    <h1 className='blue fw9-ns'>Robo Friends</h1>\r\n                    <SearchBox onSearchChange={onSearchChange} value={searchField}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n//define map state to props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error,\r\n\r\n    }\r\n};\r\n//define mapDispatchToProps\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (e) => dispatch(setSearchField(e.target.value)),\r\n        onRequestRobots: () => requestRobots(dispatch)\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAIL, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS} from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});\r\nexport const requestRobots = (dispatch) => {\r\n    dispatch({type: REQUEST_ROBOTS_PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n        .catch(error => dispatch({type: REQUEST_ROBOTS_FAIL, payload: error}));\r\n};","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAIL = 'REQUEST_ROBOTS_FAIL';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers} from \"redux\";\r\nimport {createLogger} from \"redux-logger\";\r\nimport {searchRobots, requestRobotsReducer} from './reducers';\r\nimport thunk from \"redux-thunk\";\r\nimport App from './containers/App';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({searchRobots, requestRobots: requestRobotsReducer});\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}